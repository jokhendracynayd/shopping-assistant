version: '3.8'

services:
  shopping-assistant:
    build: .
    ports:
      - "8000:8000"
    environment:
      # LLM Configuration
      - GROQ_API_KEY=${GROQ_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}

      # Weaviate Configuration
      - WEAVIATE_URL=http://weaviate:8080
      - WEAVIATE_API_KEY=${WEAVIATE_API_KEY:-}

      # Redis Configuration
      - REDIS_URL=redis://redis:6379/0

      # Application Settings
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - DEFAULT_TEMPERATURE=${DEFAULT_TEMPERATURE:-0.0}
      - LLM_TIMEOUT_SECONDS=${LLM_TIMEOUT_SECONDS:-30}
      - API_REQUEST_TIMEOUT_SECONDS=${API_REQUEST_TIMEOUT_SECONDS:-60}
      - RATE_LIMITING_ENABLED=${RATE_LIMITING_ENABLED:-true}
      - RATE_LIMIT_REQUESTS_PER_MINUTE=${RATE_LIMIT_REQUESTS_PER_MINUTE:-60}

      # Development overrides
      - DEBUG=true
      - RELOAD=true
    depends_on:
      - redis
      - weaviate
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
    networks:
      - shopping-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - shopping-network
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  weaviate:
    image: semitechnologies/weaviate:1.24.1
    ports:
      - "8080:8080"
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'none'
      ENABLE_MODULES: 'text2vec-openai,text2vec-cohere,text2vec-huggingface,ref2vec-centroid,generative-openai,qna-openai'
      CLUSTER_HOSTNAME: 'node1'
      ENABLE_CROSS_ORIGIN_REQUESTS: 'true'
      LOG_LEVEL: 'info'
    volumes:
      - weaviate_data:/var/lib/weaviate
    restart: unless-stopped
    networks:
      - shopping-network

  # Optional: Add pgvector for PostgreSQL vector search alternative
  postgres:
    image: pgvector/pgvector:pg16
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: shopping_assistant
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - shopping-network

  # Optional: Add ChromaDB for local vector search
  chroma:
    image: chromadb/chroma:latest
    ports:
      - "8001:8000"
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
      - CHROMA_SERVER_CORS_ALLOW_ORIGINS=["*"]
    volumes:
      - chroma_data:/chroma/chroma
    restart: unless-stopped
    networks:
      - shopping-network

volumes:
  redis_data:
  weaviate_data:
  postgres_data:
  chroma_data:

networks:
  shopping-network:
    driver: bridge
